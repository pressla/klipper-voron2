    # care and feeding of the dataset
    {% set raw_temp_history = heat_soak.raw_temp_history %}
    {% set _ = raw_temp_history.append(soak_temp_rate_smoothed) %}
    {% if (raw_temp_history | length) > heat_soak.rate_smooth_time %}
        {% set raw_temp_history = raw_temp_history[1:] %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=raw_temp_history VALUE='{(raw_temp_history | pprint | replace("\n", ""))}'


    {% if (raw_temp_history | length) >= heat_soak.rate_smooth_time %}
        # Least Squares: https://towardsdatascience.com/linear-regression-using-least-squares-a4c3456e8570
        # X values are time in seconds
        # Y values are temperatures
        {% set count = (raw_temp_history | length) | float %}
        {% set times = range(0, count, 1) }
        {% set x_sum = (times | sum) %}
        {% set y_sum = (raw_temp_history | sum) %}

        # Squares
        # Jinja weirdness: += in a loop doesn't work, so collect squares and sum after
        {% set xx_sum_arr = [] %}
        {% set xy_sum_arr = [] %}
        {% for i in times %}
            {% set x = times[i] %}
            {% set y = raw_temp_history[i] %}
            {% set _ = xx_sum_arr.append(x * x) %}
            {% set _ = xy_sum_arr.append(x * y) %}
        {% endfor %}
        {% set xx_sum = (xx_sum_arr | sum) %}
        {% set xy_sum = (xy_sum_arr | sum) %}

        #slope calculation
        {% set slope = ((count * xy_sum) - (x_sum * y_sum)) / ((count * xx_sum) - (x_sum * x_sum)) %}
    {% endif %}
